<?xml version="1.0" encoding="UTF-8"?>
<templates>
    <t t-name="task_manager.TaskDashboard">
        <div class="task-dashboard h-100 d-flex flex-column p-3">
            <!-- Theme Selector Button and Panel -->
            <div class="theme-selector-container">
                <button class="theme-selector-toggle" t-on-click="toggleThemeSelector">
                    <i class="fa fa-palette me-1"></i>
                </button>
                <div t-if="state.themeSystem.showThemeSelector" class="theme-selector-panel shadow">
                    <div class="theme-selector-header">
                        <h6 class="m-0">Select Theme</h6>
                        <button class="btn-close btn-sm" t-on-click="toggleThemeSelector"></button>
                    </div>
                    <div class="theme-options">
                        <div t-foreach="Object.keys(state.themeSystem.themes)" t-as="theme" t-key="theme"
                             t-attf-class="theme-option {{state.themeSystem.currentTheme === theme ? 'selected' : ''}}"
                             t-on-click="() => this.changeTheme(theme)">
                            <div class="theme-preview">
                                <div class="theme-color" t-attf-style="background-color: {{state.themeSystem.themes[theme].primaryColor}}"></div>
                                <div class="theme-color" t-attf-style="background-color: {{state.themeSystem.themes[theme].secondaryColor}}"></div>
                                <div class="theme-color" t-attf-style="background-color: {{state.themeSystem.themes[theme].accentColor}}"></div>
                            </div>
                            <div class="theme-name" t-esc="state.themeSystem.themes[theme].name"></div>
                            <div t-if="state.themeSystem.currentTheme === theme" class="theme-check">
                                <i class="fa fa-check"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Task Creation/Edit Modal -->
            <div t-if="state.showTaskModal" class="task-modal-backdrop" t-on-click="closeTaskModal">
                <div class="task-modal-dialog" t-on-click.stop="">
                    <div class="task-modal-content" t-on-keydown="onFormKeydown">
                        <div class="task-modal-header">
                            <h5 class="task-modal-title">
                                <t t-if="state.editTaskId">Edit Task</t>
                                <t t-else="">New Task</t>
                            </h5>
                            <button type="button" class="btn-close" t-on-click="closeTaskModal" aria-label="Close"></button>
                        </div>
                        <div class="task-modal-body">
                            <form t-on-submit.prevent="createTask">
                                <div class="mb-3">
                                    <label class="form-label">Task Title</label>
                                    <input type="text" class="form-control" 
                                           placeholder="Enter task title" 
                                           t-model="state.newTask.name"
                                           t-on-keydown="onFormKeydown"
                                           autofocus="true" />
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Priority</label>
                                        <select class="form-select custom-select" 
                                                t-model="state.newTask.priority"
                                                t-on-keydown="onFormKeydown">
                                            <option value="0">Low Priority</option>
                                            <option value="1">Normal Priority</option>
                                            <option value="2">High Priority</option>
                                            <option value="3">Urgent</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Deadline Date</label>
                                        <div class="input-group date-picker-group">
                                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                            <input type="date" class="form-control date-input" 
                                                   t-model="state.newTask.deadline_date"
                                                   t-on-keydown="onFormKeydown" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Time</label>
                                        <div class="input-group time-picker-group">
                                            <span class="input-group-text"><i class="fa fa-clock-o"></i></span>
                                            <input type="time" class="form-control time-input" 
                                                   t-model="state.newTask.deadline_time"
                                                   t-on-keydown="onFormKeydown" />
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Assigned To</label>
                                    <select class="form-select custom-select" 
                                            t-model="state.newTask.user_id"
                                            t-on-keydown="onFormKeydown">
                                        <option value="">Unassigned</option>
                                        <t t-foreach="state.users" t-as="user" t-key="user.id">
                                            <option t-att-value="user.id" t-esc="user.name" />
                                        </t>
                                    </select>
                                </div>
                                <!-- Hidden submit button to enable form submission with Enter key -->
                                <button type="submit" class="d-none"></button>
                            </form>
                        </div>
                        <div class="task-modal-footer">
                            <button class="btn btn-secondary" t-on-click="closeTaskModal">
                                Cancel
                            </button>
                            <button class="btn btn-primary" t-on-click="createTask" type="submit">
                                <t t-if="state.editTaskId">Update</t><t t-else="">Create</t>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Pomodoro Timer Section (Replacing Task Statistics Cards) -->
            <div class="row mb-4">
                <!-- Left Column: Pomodoro Timer and News Ticker (2/3 width) -->
                <div class="col-12 col-lg-8">
                    <!-- Pomodoro Timer Card -->
                    <div class="card shadow-sm border-0 pomodoro-card mb-4">
                        <div class="card-body p-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h4 class="card-title m-0">Pomodoro Timer</h4>
                                <div>
                                    <button t-if="!state.timerActive" 
                                            class="btn btn-primary rounded-pill shadow-sm"
                                            t-on-click="startPomodoro">
                                        <i class="fa fa-play me-1"></i> Start Focus
                                    </button>
                                    <button t-else="" 
                                            class="btn btn-danger rounded-pill shadow-sm"
                                            t-on-click="stopPomodoro">
                                        <i class="fa fa-stop me-1"></i> Stop
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Timer Display -->
                            <div class="pomodoro-timer-display">
                                <div class="timer-circle">
                                    <div class="timer-progress">
                                        <div class="timer-inner">
                                            <div class="timer-time">
                                                <span t-esc="formatTime(state.timerMinutes)"></span> : <span t-esc="formatTime(state.timerSeconds)"></span>
                                            </div>
                                            <div class="timer-label" t-esc="state.timerMode.label"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Mode Buttons -->
                            <div class="pomodoro-modes mt-4">
                                <div class="btn-group w-100">
                                    <button t-on-click="() => this.setTimerMode('focus')"
                                            t-att-class="'btn ' + (state.timerMode.id === 'focus' ? 'btn-primary' : 'btn-outline-primary')">
                                        Focus (25m)
                                    </button>
                                    <button t-on-click="() => this.setTimerMode('shortBreak')"
                                            t-att-class="'btn ' + (state.timerMode.id === 'shortBreak' ? 'btn-success' : 'btn-outline-success')">
                                        Short Break (5m)
                                    </button>
                                    <button t-on-click="() => this.setTimerMode('longBreak')"
                                            t-att-class="'btn ' + (state.timerMode.id === 'longBreak' ? 'btn-info' : 'btn-outline-info')">
                                        Long Break (15m)
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Selected Task For Pomodoro (if any) -->
                            <div class="mt-4" t-if="state.selectedPomodoroTask">
                                <div class="current-task p-3 rounded">
                                    <div class="d-flex align-items-center">
                                        <div class="me-3">
                                            <i class="fa fa-check-circle text-success fa-2x"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <h6 class="mb-0">Current Task</h6>
                                            <p class="mb-0 text-primary" t-esc="state.selectedPomodoroTask.name"></p>
                                        </div>
                                        <button class="btn btn-sm btn-link text-muted" t-on-click="clearPomodoroTask">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Pomodoro Session Stats -->
                            <div class="pomodoro-stats mt-4">
                                <div class="row text-center">
                                    <div class="col-4">
                                        <div class="stat-circle">
                                            <span t-esc="state.completedPomodoros"></span>
                                        </div>
                                        <div class="stat-label">Completed</div>
                                    </div>
                                    <div class="col-4">
                                        <div class="stat-circle">
                                            <span t-esc="state.pomodoroGoal"></span>
                                        </div>
                                        <div class="stat-label">Goal</div>
                                    </div>
                                    <div class="col-4">
                                        <div class="stat-circle">
                                            <span t-esc="state.currentPomodoroStreak"></span>
                                        </div>
                                        <div class="stat-label">Streak</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- News Ticker and Weather Section -->
                    <div class="row g-0">
                        <!-- Latest Updates - Left Side -->
                        <div class="col-7 pe-2">
                            <div class="card shadow-sm border-0 news-ticker-card">
                                <div class="card-body p-0">
                                    <div class="news-ticker-container">
                                        <div class="news-ticker-header">
                                            <div class="ticker-label">
                                                <span class="ticker-pulse"></span>
                                                LATEST UPDATES
                                            </div>
                                            <div class="ticker-control">
                                                <button class="btn btn-icon ticker-btn" t-on-click="toggleNewsTickerPause">
                                                    <i t-attf-class="fa {{state.newsTickerPaused ? 'fa-play' : 'fa-pause'}}"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="news-ticker-content" t-att-class="{'paused': state.newsTickerPaused}">
                                            <div class="ticker-decoration">
                                                <div class="ticker-dot"></div>
                                                <div class="ticker-dot"></div>
                                                <div class="ticker-dot"></div>
                                            </div>
                                            <div class="ticker-track">
                                                <div class="ticker-item">
                                                    <i class="fa fa-newspaper-o ticker-icon"></i>
                                                    <span>New feature released: Task prioritization now includes AI recommendations</span>
                                                </div>
                                                <div class="ticker-item">
                                                    <i class="fa fa-bar-chart ticker-icon"></i>
                                                    <span>Productivity increased by 27% with the Pomodoro technique</span>
                                                </div>
                                                <div class="ticker-item">
                                                    <i class="fa fa-calendar-check-o ticker-icon"></i>
                                                    <span>Users completing 4+ pomodoros daily report better work-life balance</span>
                                                </div>
                                                <div class="ticker-item">
                                                    <i class="fa fa-lightbulb-o ticker-icon"></i>
                                                    <span>Tip: Use task categories to better organize your workflow</span>
                                                </div>
                                                <div class="ticker-item">
                                                    <i class="fa fa-line-chart ticker-icon"></i>
                                                    <span>Studies show taking regular breaks improves focus by up to 45%</span>
                                                </div>
                                            </div>
                                            <div class="ticker-gradient-left"></div>
                                            <div class="ticker-gradient-right"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Weather Widget - Right Side -->
                        <div class="col-5 ps-2">
                            <div class="card shadow-sm border-0 weather-card">
                                <div class="card-body p-0">
                                    <div class="weather-container" t-att-class="{'loading': !state.weather || state.weather.loading}">
                                        <div class="weather-header">
                                            <h6 class="m-0">Weather</h6>
                                            <button class="btn btn-icon refresh-btn" t-on-click="refreshWeather">
                                                <i class="fa fa-refresh"></i>
                                            </button>
                                        </div>
                                        <div class="weather-content">
                                            <!-- Loading State -->
                                            <div t-if="!state.weather || state.weather.loading" class="weather-loading">
                                                <div class="spinner-border text-primary" role="status">
                                                    <span class="visually-hidden">Loading...</span>
                                                </div>
                                                <p class="m-0 mt-2">Loading weather...</p>
                                            </div>
                                            
                                            <!-- Error State -->
                                            <div t-elif="state.weather.error" class="weather-error">
                                                <i class="fa fa-exclamation-triangle text-warning"></i>
                                                <p class="m-0 mt-2" t-esc="state.weather.error"></p>
                                                <button class="btn btn-sm btn-outline-primary mt-2" t-on-click="refreshWeather">
                                                    Retry
                                                </button>
                                            </div>
                                            
                                            <!-- Weather Data -->
                                            <div t-else="" class="weather-data">
                                                <div class="city-info">
                                                    <h5 class="city-name" t-esc="state.weather.data.name"></h5>
                                                    <p class="country" t-esc="state.weather.data.sys.country"></p>
                                                </div>
                                                <div class="temp-container">
                                                    <div class="weather-icon">
                                                        <img t-if="state.weather.data.weather[0].icon" 
                                                             t-att-src="'https://openweathermap.org/img/wn/' + state.weather.data.weather[0].icon + '@2x.png'" 
                                                             t-att-alt="state.weather.data.weather[0].description" />
                                                    </div>
                                                    <div class="temp-data">
                                                        <h2 class="temperature">
                                                            <span t-esc="Math.round(state.weather.data.main.temp)"></span>°C
                                                        </h2>
                                                        <p class="weather-desc" t-esc="state.weather.data.weather[0].description"></p>
                                                    </div>
                                                </div>
                                                <div class="weather-details">
                                                    <div class="detail">
                                                        <i class="fa fa-tint"></i>
                                                        <span t-esc="state.weather.data.main.humidity + '%'"></span>
                                                    </div>
                                                    <div class="detail">
                                                        <i class="fa fa-wind"></i>
                                                        <span t-esc="Math.round(state.weather.data.wind.speed) + ' m/s'"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Right Column: Task Section -->
                <div class="col-12 col-lg-4">
                    <!-- Task Selection Card -->
                    <div class="card shadow-sm border-0 task-focus-card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Select Task for Focus</h5>
                                <button class="btn btn-sm btn-primary rounded-circle add-task-btn" t-on-click="toggleTaskModal">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div t-if="getOpenTasks().length === 0" class="empty-state">
                                <div class="empty-tasks-icon">
                                    <i class="fa fa-tasks"></i>
                                </div>
                                <p>No open tasks available</p>
                                <button class="btn btn-sm btn-primary" t-on-click="toggleTaskModal">
                                    <i class="fa fa-plus me-1"></i> Create Task
                                </button>
                            </div>
                            <div t-else="" class="task-list">
                                <div t-foreach="getOpenTasks()" t-as="task" t-key="task.id" 
                                     class="task-item-wrapper">
                                    <div class="task-item"
                                         t-att-class="{'selected': state.selectedPomodoroTask &amp;&amp; state.selectedPomodoroTask.id === task.id}"
                                         t-att-data-task-id="task.id"
                                         t-on-click="() => this.toggleTaskSelection(task)">
                                        <div class="task-checkbox" t-on-click.stop="() => this.toggleTaskSelection(task)">
                                            <div class="checkbox-circle">
                                                <i t-if="state.selectedPomodoroTask &amp;&amp; state.selectedPomodoroTask.id === task.id" 
                                                   class="fa fa-check"></i>
                                            </div>
                                        </div>
                                        <div class="task-details">
                                            <div class="task-name" t-esc="task.name"></div>
                                            <div class="task-meta">
                                                <span t-if="task.priority === '3'" class="priority urgent">Urgent</span>
                                                <span t-elif="task.priority === '2'" class="priority high">High Priority</span>
                                            </div>
                                        </div>
                                        <div class="task-actions">
                                            <button class="action-btn edit-btn" 
                                                    t-on-click.stop="() => this.editTask(task.id)" 
                                                    title="Edit task">
                                                <i class="fa fa-pencil"></i>
                                            </button>
                                            <button class="action-btn delete-btn" 
                                                    t-on-click.stop="() => this.confirmDeleteTask(task.id, task.name)" 
                                                    title="Delete task">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Snackbar for notifications -->
            <div t-if="state.showSnackbar" class="snackbar shadow">
                <span t-esc="state.snackbarMessage" />
            </div>

            <!-- Delete Confirmation Modal -->
            <div t-if="state.showDeleteModal" class="delete-modal-backdrop" t-on-click="cancelDelete">
                <div class="delete-modal-dialog" t-on-click.stop="">
                    <div class="delete-modal-content">
                        <div class="delete-modal-header">
                            <h5 class="delete-modal-title">Confirm Delete</h5>
                            <button type="button" class="btn-close" t-on-click="cancelDelete" aria-label="Close"></button>
                        </div>
                        <div class="delete-modal-body">
                            Are you sure you want to delete task "<span t-esc="state.deleteTask.name"></span>"?
                        </div>
                        <div class="delete-modal-footer">
                            <button type="button" class="btn btn-secondary" t-on-click="cancelDelete">Cancel</button>
                            <button type="button" class="btn btn-danger" t-on-click="confirmDelete">Delete</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- CSS Styles -->
            <style>
                /* Theme system - CSS Variables */
                :root {
                    --primary-color: #714B67;
                    --secondary-color: #017e84;
                    --accent-color: #00A09D;
                    --text-color: #212529;
                    --background-color: #f5f7fa;
                    --card-background-color: #ffffff;
                    --button-hover-color: #5D3E56;
                }

                /* Theme Selector Styles */
                .theme-selector-container {
                    position: fixed;
                    top: 15px;
                    right: 15px;
                    z-index: 1000;
                }
                
                .theme-selector-toggle {
                    width: 40px;
                    height: 40px;
                    border-radius: 50%;
                    background-color: var(--primary-color);
                    color: white;
                    border: none;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.15);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    cursor: pointer;
                    transition: all 0.3s ease;
                }
                
                .theme-selector-toggle:hover {
                    transform: scale(1.1);
                    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
                    background-color: var(--button-hover-color);
                }
                
                .theme-selector-panel {
                    position: absolute;
                    top: 50px;
                    right: 0;
                    width: 240px;
                    background-color: var(--card-background-color);
                    border-radius: 10px;
                    overflow: hidden;
                    animation: slideInDown 0.3s ease;
                    box-shadow: 0 4px 20px rgba(0,0,0,0.15);
                }
                
                @keyframes slideInDown {
                    from {
                        transform: translateY(-20px);
                        opacity: 0;
                    }
                    to {
                        transform: translateY(0);
                        opacity: 1;
                    }
                }
                
                .theme-selector-header {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding: 12px 15px;
                    background-color: var(--primary-color);
                    color: white;
                }
                
                .theme-options {
                    padding: 10px;
                    display: flex;
                    flex-direction: column;
                    gap: 8px;
                }
                
                .theme-option {
                    display: flex;
                    align-items: center;
                    padding: 10px;
                    border-radius: 8px;
                    cursor: pointer;
                    transition: background-color 0.2s ease;
                    position: relative;
                }
                
                .theme-option:hover {
                    background-color: rgba(0,0,0,0.05);
                }
                
                .theme-option.selected {
                    background-color: rgba(0,0,0,0.08);
                }
                
                .theme-preview {
                    display: flex;
                    gap: 4px;
                    margin-right: 10px;
                }
                
                .theme-color {
                    width: 20px;
                    height: 20px;
                    border-radius: 4px;
                }
                
                .theme-name {
                    flex: 1;
                    font-size: 14px;
                    color: var(--text-color);
                }
                
                .theme-check {
                    color: var(--primary-color);
                    font-size: 14px;
                }

                /* General transition for all interactive elements with slower fade */
                button, .card, .task-card, .task-item, .task-checkbox,
                .btn-icon, .select-checkbox, .action-btn {
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1) !important;
                }
                
                .task-dashboard {
                    background-color: var(--background-color);
                    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, sans-serif;
                    letter-spacing: 0.01em;
                    color: var(--text-color);
                }
                
                /* Card styling enhancements for Material Design */
                .card {
                    border-radius: 16px;
                    border: none;
                    overflow: hidden;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    box-shadow: 0 3px 6px rgba(0,0,0,0.06), 0 3px 6px rgba(0,0,0,0.13);
                    background-color: var(--card-background-color);
                }
                
                .card:hover {
                    box-shadow: 0 10px 20px rgba(0,0,0,0.08), 0 6px 6px rgba(0,0,0,0.12);
                    transform: translateY(-2px);
                }
                
                .card-title {
                    font-weight: 500;
                    letter-spacing: 0.01em;
                    color: var(--text-color);
                    font-size: 1.1rem;
                }
                
                /* Update button colors to use theme variables */
                .btn-primary {
                    background-color: var(--primary-color);
                    border-color: var(--primary-color);
                }
                
                .btn-primary:hover, .btn-primary:focus, .btn-primary:active {
                    background-color: var(--button-hover-color);
                    border-color: var(--button-hover-color);
                }
                
                .btn-outline-primary {
                    color: var(--primary-color);
                    border-color: var(--primary-color);
                }
                
                .btn-outline-primary:hover, .btn-outline-primary:focus {
                    background-color: var(--primary-color);
                    border-color: var(--primary-color);
                    color: white;
                }
                
                .btn-success {
                    background-color: var(--secondary-color);
                    border-color: var(--secondary-color);
                }
                
                .btn-outline-success {
                    color: var(--secondary-color);
                    border-color: var(--secondary-color);
                }
                
                .btn-outline-success:hover, .btn-outline-success:focus {
                    background-color: var(--secondary-color);
                    border-color: var(--secondary-color);
                }
                
                .btn-info, .btn-outline-info:hover, .btn-outline-info:focus {
                    background-color: var(--accent-color);
                    border-color: var(--accent-color);
                }
                
                .btn-outline-info {
                    color: var(--accent-color);
                    border-color: var(--accent-color);
                }
                
                /* Standardized right column cards - consistent styling for both cards */
                .task-side-card {
                    border-radius: 12px;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
                    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
                    width: 100%;
                    background-color: var(--card-background-color);
                    margin-bottom: 1rem;
                    height: auto;
                }
                
                .task-side-card:hover {
                    box-shadow: 0 6px 16px rgba(0,0,0,0.1);
                    transform: translateY(-3px);
                    background-color: var(--background-color);
                }
                
                .task-side-card .card-body {
                    padding: 1.25rem 1rem 1rem 1rem !important;
                }
                
                /* Select task card specific styling - Updated positioning */
                .select-task-card {
                    flex: 1;
                    min-height: 450px;
                    max-height: calc(100vh - 150px);
                    display: flex;
                    flex-direction: column;
                    margin-top: -10px; /* Move closer to pomodoro timer */
                    border-top: 4px solid var(--accent-color); /* Use accent color */
                    transition: all 0.3s ease;
                }
                
                .select-task-card:hover {
                    border-top-color: var(--primary-color); /* Use primary color on hover */
                    transform: translateY(-3px);
                    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
                }
                
                .select-task-card .card-title {
                    color: var(--primary-color);
                    font-size: 1.15rem;
                    font-weight: 500;
                    letter-spacing: 0.01em;
                    border-bottom: 1px solid #e9ecef;
                    padding-bottom: 0.75rem;
                }
                
                .task-selection-list {
                    overflow-y: auto;
                    height: calc(100% - 50px);
                    scrollbar-width: thin;
                    padding-right: 5px;
                    scroll-behavior: smooth;
                    margin-top: 0.5rem;
                }
                
                /* Task Item Styling - Fixed Version with Sky Blue Accent */
                .task-selection-item {
                    position: relative;
                    padding: 12px 14px;
                    margin-bottom: 10px;
                    border-radius: 12px;
                    background-color: #fff;
                    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.08);
                    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
                    cursor: pointer;
                    min-height: 58px; 
                    border-left: 3px solid transparent;
                    overflow: hidden; /* For the after pseudo-element */
                }
                
                .task-selection-item::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 0;
                    bottom: 0;
                    width: 3px;
                    background-color: transparent;
                    border-radius: 3px 0 0 3px;
                    transition: background-color 0.3s ease;
                }
                
                .task-selection-item::after {
                    content: '';
                    position: absolute;
                    left: 0;
                    right: 0;
                    bottom: -2px;
                    height: 2px;
                    background-color: #4fc3f7; /* Sky blue accent */
                    transform: scaleX(0);
                    transform-origin: 0 50%;
                    transition: transform 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
                }
                
                .task-selection-item:hover::after {
                    transform: scaleX(1);
                }
                
                .task-selection-item.selected::before {
                    background-color: #4285f4;
                }
                
                .task-selection-item:hover {
                    background-color: #f8f9fa;
                    transform: translateX(3px);
                    box-shadow: 0 2px 5px rgba(0,0,0,0.08);
                    border-bottom: none; /* Remove default border bottom if any */
                }
                
                .task-selection-item.selected {
                    background-color: #e8f5ff; /* Lighter blue background */
                    border-left: 3px solid #0d6efd;
                    box-shadow: 0 2px 10px rgba(13, 110, 253, 0.15);
                }
                
                .task-selection-item.selected::after {
                    transform: scaleX(1);
                    background-color: #2196f3; /* Darker blue for selected items */
                }
                
                .task-content {
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    min-width: 0; /* Prevent flex items from overflowing */
                }
                
                .task-name {
                    font-weight: 500;
                    color: #424242;
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    font-size: 0.95rem;
                    letter-spacing: 0.01em;
                    line-height: 1.2;
                }

                .task-actions {
                    display: flex;
                    opacity: 0.3;
                    transition: opacity 0.2s ease;
                    margin-left: 8px;
                    align-self: center;
                }
                
                .task-selection-item:hover .task-actions {
                    opacity: 1;
                }
                
                /* Enhanced Checkbox Styling */
                .select-checkbox {
                    width: 24px;
                    height: 24px;
                    border: 2px solid rgba(0,0,0,0.15);
                    border-radius: 50%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    cursor: pointer;
                    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
                    position: relative;
                    overflow: hidden;
                    margin-right: 8px;
                    flex-shrink: 0;
                    align-self: center;
                }
                
                .select-checkbox:hover {
                    border-color: #0d6efd;
                    background-color: rgba(13, 110, 253, 0.1);
                    transform: scale(1.05);
                }
                
                .select-checkbox:active {
                    transform: scale(0.92);
                }
                
                .select-checkbox::after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
                    opacity: 0;
                    transform: scale(0);
                    transition: transform 0.3s cubic-bezier(0.25, 0.8, 0.25, 1), opacity 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
                }
                
                .select-checkbox:active::after {
                    transform: scale(2);
                    opacity: 1;
                    transition: 0s;
                }
                
                .selected .select-checkbox {
                    border-color: #0d6efd;
                    background-color: #0d6efd;
                    color: white;
                    box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.2);
                }
                
                /* Material UI Action Button Styles */
                .btn-icon {
                    width: 36px;
                    height: 36px;
                    border-radius: 50%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    border: none;
                    background-color: transparent;
                    color: #757575;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    padding: 0;
                    margin-left: 4px;
                    box-shadow: none;
                    flex-shrink: 0;
                    position: relative;
                    overflow: hidden;
                }
                
                .btn-icon:hover {
                    background-color: rgba(0, 0, 0, 0.08);
                    color: #424242;
                }
                
                .btn-icon:active {
                    background-color: rgba(0, 0, 0, 0.12);
                    transform: scale(0.96);
                }
                
                .btn-icon:focus {
                    outline: none;
                    box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.2);
                }
                
                .edit-btn:hover {
                    color: #2196F3;
                }
                
                .delete-btn:hover {
                    color: #F44336;
                }
                
                /* Add ripple effect for Material UI feel */
                .btn-icon::after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    background: radial-gradient(circle, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0) 70%);
                    opacity: 0;
                    transform: scale(0);
                    transition: all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
                }
                
                .btn-icon:active::after {
                    transform: scale(2);
                    opacity: 1;
                    transition: 0s;
                }
                
                .snackbar {
                    position: fixed;
                    bottom: 24px;
                    left: 50%;
                    transform: translateX(-50%);
                    background-color: #333;
                    color: white;
                    padding: 12px 24px;
                    border-radius: 4px;
                    z-index: 1050;
                    animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;
                }
                
                /* Task Modal Styles - Similar to Delete Modal */
                .task-modal-backdrop {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0, 0, 0, 0.5);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 1050;
                    animation: fadeIn 0.2s ease-out;
                    transition: opacity 0.3s ease;
                }
                
                .task-modal-backdrop.fade-out {
                    opacity: 0;
                }
                
                .task-modal-dialog {
                    max-width: 500px;
                    width: 100%;
                    margin: 1.75rem auto;
                    animation: slideIn 0.3s ease-out;
                    transition: transform 0.3s ease, opacity 0.3s ease;
                }
                
                .task-modal-backdrop.fade-out .task-modal-dialog {
                    transform: translateY(-20px);
                    opacity: 0;
                }
                
                .task-modal-content {
                    position: relative;
                    display: flex;
                    flex-direction: column;
                    background-color: #fff;
                    background-clip: padding-box;
                    border: 1px solid rgba(0, 0, 0, 0.2);
                    border-radius: 1rem;
                    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
                    overflow: hidden;
                }
                
                .task-modal-header {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding: 1rem;
                    border-bottom: 1px solid #dee2e6;
                    background-color: #f8f9fa;
                }
                
                .task-modal-title {
                    margin: 0;
                    font-size: 1.25rem;
                    color: #212529;
                }
                
                .task-modal-body {
                    position: relative;
                    flex: 1 1 auto;
                    padding: 1.5rem;
                }
                
                .task-modal-footer {
                    display: flex;
                    align-items: center;
                    justify-content: flex-end;
                    padding: 1rem;
                    border-top: 1px solid #dee2e6;
                    gap: 0.5rem;
                    background-color: #f8f9fa;
                }
                
                /* Enhanced form styling */
                .custom-select {
                    cursor: pointer;
                    background-position: right 0.75rem center;
                    background-size: 16px 12px;
                }
                
                .date-picker-group, .time-picker-group {
                    box-shadow: 0 2px 5px rgba(0,0,0,0.08);
                    border-radius: 4px;
                    overflow: hidden;
                }
                
                .date-picker-group .input-group-text, 
                .time-picker-group .input-group-text {
                    background-color: #f8f9fa;
                    border-right: none;
                }
                
                .date-input, .time-input {
                    border-left: none;
                    padding-left: 0;
                }
                
                /* Delete modal styles */
                .delete-modal-backdrop {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0, 0, 0, 0.5);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    z-index: 1050;
                    animation: fadeIn 0.2s ease-out;
                    transition: opacity 0.3s ease;
                    opacity: 0.9;
                }
                
                .delete-modal-backdrop.active {
                    opacity: 1;
                }
                
                .delete-modal-backdrop.fade-out {
                    opacity: 0;
                }
                
                .delete-modal-dialog {
                    max-width: 400px;
                    width: 100%;
                    margin: 1.75rem auto;
                    animation: slideIn 0.3s ease-out;
                    transition: transform 0.3s ease, opacity 0.3s ease;
                }
                
                .delete-modal-backdrop.fade-out .delete-modal-dialog {
                    transform: translateY(-20px);
                    opacity: 0;
                }
                
                .delete-modal-content {
                    position: relative;
                    display: flex;
                    flex-direction: column;
                    background-color: #fff;
                    background-clip: padding-box;
                    border: 1px solid rgba(0, 0, 0, 0.2);
                    border-radius: 1rem;
                    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
                    overflow: hidden;
                }
                
                .delete-modal-header {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding: 1rem;
                    border-bottom: 1px solid #dee2e6;
                }
                
                .delete-modal-title {
                    margin: 0;
                    font-size: 1.25rem;
                }
                
                .delete-modal-body {
                    position: relative;
                    flex: 1 1 auto;
                    padding: 1.5rem;
                }
                
                .delete-modal-footer {
                    display: flex;
                    align-items: center;
                    justify-content: flex-end;
                    padding: 1rem;
                    border-top: 1px solid #dee2e6;
                    gap: 0.5rem;
                }
                
                @keyframes fadeIn {
                    from { opacity: 0; }
                    to { opacity: 1; }
                }
                
                @keyframes slideIn {
                    from {
                        transform: translateY(-30px);
                        opacity: 0;
                    }
                    to {
                        transform: translateY(0);
                        opacity: 1;
                    }
                }
                
                @keyframes fadeOut {
                    from { opacity: 1; transform: translate(-50%, 0); }
                    to { opacity: 0; transform: translate(-50%, 20px); }
                }
                
                /* Pomodoro Timer Styles */
                .pomodoro-card {
                    border-radius: 16px;
                    background-color: #fff;
                    transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                    height: auto;
                    position: relative;
                    overflow: hidden;
                }
                
                .pomodoro-card::after {
                    content: '';
                    position: absolute;
                    top: 0;
                    right: 0;
                    width: 150px;
                    height: 150px;
                    background: radial-gradient(circle, rgba(66, 133, 244, 0.08) 0%, rgba(255,255,255,0) 70%);
                    border-radius: 50%;
                    pointer-events: none;
                }
                
                .pomodoro-timer-display {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    margin: 2rem 0;
                }
                
                .timer-circle {
                    width: 220px;
                    height: 220px;
                    border-radius: 50%;
                    background-color: #f5f5f5;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    box-shadow: 0 6px 20px rgba(0,0,0,0.08);
                }
                
                .timer-progress {
                    width: 200px;
                    height: 200px;
                    border-radius: 50%;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    transition: background 0.3s;
                    background: conic-gradient(var(--progress-color) var(--progress-percent, 0%), transparent 0%);
                }
                
                .timer-inner {
                    width: 180px;
                    height: 180px;
                    border-radius: 50%;
                    background-color: white;
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    box-shadow: inset 0 4px 8px rgba(0,0,0,0.05);
                }
                
                .timer-time {
                    font-size: 3rem;
                    font-weight: 600;
                    line-height: 1.2;
                    color: #212121;
                }
                
                .timer-label {
                    font-size: 1rem;
                    color: #777;
                    margin-top: 0.25rem;
                }
                
                .pomodoro-modes {
                    padding: 0.5rem 0;
                }
                
                .pomodoro-modes .btn {
                    padding: 0.5rem 0.5rem;
                    font-size: 0.85rem;
                    font-weight: 500;
                    border-radius: 4px;
                    transition: all 0.2s ease;
                }
                
                .pomodoro-stats {
                    padding: 0.5rem 0;
                }
                
                .stat-circle {
                    width: 50px;
                    height: 50px;
                    border-radius: 50%;
                    background-color: #f8f9fa;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    margin: 0 auto 0.5rem;
                    font-size: 1.2rem;
                    font-weight: 600;
                    color: #555;
                    box-shadow: 0 2px 6px rgba(0,0,0,0.08);
                }
                
                .stat-label {
                    font-size: 0.85rem;
                    color: #777;
                }
                
                .current-task {
                    background-color: #f8f9fa;
                    border-left: 4px solid #4285f4;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
                    transition: all 0.2s;
                }
                
                .current-task:hover {
                    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
                    transform: translateY(-2px);
                }
                
                .stats-card, .select-task-card {
                    border-radius: 12px;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
                    transition: box-shadow 0.3s;
                }
                
                .stats-card:hover, .select-task-card:hover {
                    box-shadow: 0 6px 16px rgba(0,0,0,0.1);
                }
                
                .select-task-card {
                    height: calc(100vh - 150px);
                    overflow: hidden;
                    display: flex;
                    flex-direction: column;
                    background-color: #fafafa;
                }
                
                .select-task-card .card-body {
                    padding: 1.25rem;
                }
                
                .task-selection-list {
                    overflow-y: auto;
                    max-height: calc(100vh - 220px);
                    scrollbar-width: thin;
                    padding-right: 5px;
                    scroll-behavior: smooth;
                }
                
                .task-selection-list::-webkit-scrollbar {
                    width: 6px;
                }
                
                .task-selection-list::-webkit-scrollbar-track {
                    background: rgba(0,0,0,0.03);
                    border-radius: 10px;
                }
                
                .task-selection-list::-webkit-scrollbar-thumb {
                    background: rgba(0,0,0,0.12);
                    border-radius: 10px;
                    transition: background 0.3s ease;
                }
                
                .task-selection-list::-webkit-scrollbar-thumb:hover {
                    background: rgba(0,0,0,0.2);
                }
                
                .task-selection-wrapper {
                    perspective: 1000px;
                }
                
                /* News Ticker Styles */
                .news-ticker-card {
                    border-radius: 16px;
                    overflow: hidden;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
                    background: linear-gradient(135deg, #fafafa 0%, #f5f5f5 100%);
                    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                    position: relative;
                }
                
                .news-ticker-card::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(135deg, 
                        rgba(255,255,255,0.15) 0%, 
                        rgba(255,255,255,0) 50%, 
                        rgba(255,255,255,0.15) 100%);
                    transform: translateX(-100%);
                    animation: shimmer 8s infinite;
                    pointer-events: none;
                }
                
                @keyframes shimmer {
                    0% { transform: translateX(-100%); }
                    20% { transform: translateX(100%); }
                    100% { transform: translateX(100%); }
                }
                
                .news-ticker-card:hover {
                    box-shadow: 0 8px 24px rgba(0,0,0,0.12);
                    transform: translateY(-2px);
                }
                
                .news-ticker-container {
                    display: flex;
                    flex-direction: column;
                    height: 100px;
                }
                
                .news-ticker-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 12px 16px;
                    background-color: #0d6efd;
                    color: white;
                    height: 50px;
                    position: relative;
                    overflow: hidden;
                }
                
                .news-ticker-header::after {
                    content: '';
                    position: absolute;
                    top: 0;
                    right: 0;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, 
                        rgba(255,255,255,0) 0%, 
                        rgba(255,255,255,0.1) 100%);
                    pointer-events: none;
                }
                
                .ticker-label {
                    font-weight: 500;
                    font-size: 0.95rem;
                    letter-spacing: 0.05em;
                    display: flex;
                    align-items: center;
                }
                
                .ticker-pulse {
                    display: inline-block;
                    width: 10px;
                    height: 10px;
                    border-radius: 50%;
                    background-color: #ff4757;
                    margin-right: 12px;
                    position: relative;
                }
                
                .ticker-pulse::after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    border-radius: 50%;
                    background-color: #ff4757;
                    animation: pulse 2s infinite;
                    z-index: 0;
                }
                
                @keyframes pulse {
                    0% { transform: scale(1); opacity: 1; }
                    100% { transform: scale(3); opacity: 0; }
                }
                
                .ticker-control .btn-icon {
                    width: 32px;
                    height: 32px;
                    color: white;
                    margin: 0;
                    background-color: rgba(255, 255, 255, 0.1);
                }
                
                .ticker-control .btn-icon:hover {
                    background-color: rgba(255, 255, 255, 0.2);
                    transform: scale(1.1);
                }
                
                .news-ticker-content {
                    position: relative;
                    height: 50px;
                    overflow: hidden;
                    background-color: white;
                }
                
                .ticker-decoration {
                    position: absolute;
                    top: 4px;
                    left: 10px;
                    z-index: 2;
                    display: flex;
                    gap: 4px;
                }
                
                .ticker-dot {
                    width: 6px;
                    height: 6px;
                    border-radius: 50%;
                    background-color: #ddd;
                }
                
                .ticker-gradient-left, .ticker-gradient-right {
                    position: absolute;
                    top: 0;
                    width: 70px;
                    height: 100%;
                    pointer-events: none;
                    z-index: 2;
                }
                
                .ticker-gradient-left {
                    left: 0;
                    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);
                }
                
                .ticker-gradient-right {
                    right: 0;
                    background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%);
                }
                
                .ticker-track {
                    position: absolute;
                    white-space: nowrap;
                    will-change: transform;
                    animation: ticker 30s linear infinite;
                }
                
                .news-ticker-content.paused .ticker-track {
                    animation-play-state: paused;
                }
                
                .ticker-item {
                    display: inline-flex;
                    align-items: center;
                    padding: 0 24px;
                    color: #333;
                    position: relative;
                    margin-right: 20px;
                }
                
                .ticker-item::after {
                    content: '•';
                    position: absolute;
                    right: -15px;
                    color: #ccc;
                    font-size: 1.2rem;
                }
                
                .ticker-item:last-child::after {
                    content: '';
                }
                
                .ticker-icon {
                    margin-right: 8px;
                    color: #0d6efd;
                    font-size: 1.1rem;
                    display: inline-block;
                    position: relative;
                    z-index: 1;
                }
                
                .ticker-icon::before {
                    content: '';
                    position: absolute;
                    width: 24px;
                    height: 24px;
                    background-color: rgba(13, 110, 253, 0.1);
                    border-radius: 50%;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    z-index: -1;
                }
                
                @keyframes ticker {
                    0% {
                        transform: translateX(100%);
                    }
                    100% {
                        transform: translateX(-100%);
                    }
                }
                
                /* Responsive adjustments - Updated to reduce margins */
                @media (min-width: 992px) {
                    .select-task-card {
                        margin-left: 5px; /* Reduced from 10px */
                    }
                    
                    .pomodoro-card, .news-ticker-card {
                        margin-right: 5px; /* Reduced from 10px */
                    }
                }
                
                /* Task Focus Card - New Styles */
                .task-focus-card {
                    border-radius: 16px;
                    border: none;
                    overflow: hidden;
                    box-shadow: 0 3px 15px rgba(0,0,0,0.08);
                    background-color: #ffffff;
                    position: relative;
                    height: calc(100% - 0px); /* Adjusted to match Pomodoro timer height */
                    margin-top: 0px; /* Adjusted to match Pomodoro timer */
                    display: flex;
                    flex-direction: column;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    border-top: 3px solid #bbdefb;
                }
                
                .task-focus-card:hover {
                    box-shadow: 0 8px 20px rgba(66, 165, 245, 0.15);
                    transform: translateY(-3px);
                    border-top-color: #64b5f6;
                }
                
                .task-focus-card .card-header {
                    background: linear-gradient(to right, #f8faff, #ffffff);
                    border-bottom: 1px solid #e8f4fd;
                    padding: 15px;
                }
                
                .task-focus-card .card-header h5 {
                    color: #1976d2;
                    font-size: 1.15rem;
                    font-weight: 500;
                    letter-spacing: 0.01em;
                }
                
                .add-task-btn {
                    width: 32px;
                    height: 32px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    padding: 0;
                    box-shadow: 0 3px 8px rgba(33, 150, 243, 0.2);
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                }
                
                .add-task-btn:hover {
                    transform: scale(1.1);
                    box-shadow: 0 4px 12px rgba(33, 150, 243, 0.3);
                }
                
                /* Task List Container */
                .task-list {
                    padding: 15px;
                    overflow-y: auto;
                    max-height: calc(100% - 60px);
                    height: 100%;
                    scrollbar-width: thin;
                    display: flex;
                    flex-direction: column;
                    gap: 10px;
                }
                
                /* Empty State Styling */
                .empty-state {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    padding: 30px;
                    height: 100%;
                    color: #78909c;
                    text-align: center;
                }
                
                .empty-tasks-icon {
                    width: 64px;
                    height: 64px;
                    border-radius: 50%;
                    background-color: #e3f2fd;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    margin-bottom: 16px;
                }
                
                .empty-tasks-icon i {
                    font-size: 32px;
                    color: #2196f3;
                }
                
                /* Task Item Styling */
                .task-item-wrapper {
                    perspective: 1000px;
                }
                
                .task-item {
                    display: flex;
                    align-items: center;
                    padding: 12px 15px;
                    border-radius: 12px;
                    background-color: #fff;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.04);
                    border-left: 3px solid transparent;
                    position: relative;
                    cursor: pointer;
                    overflow: hidden;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                }
                
                .task-item::after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    height: 2px;
                    background: linear-gradient(to right, #2196f3, #64b5f6);
                    transform: scaleX(0);
                    transform-origin: 0 50%;
                    transition: transform 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                }
                
                .task-item:hover {
                    box-shadow: 0 4px 8px rgba(0,0,0,0.08);
                    background-color: #f8faff;
                    transform: translateY(-2px);
                }
                
                .task-item:hover::after {
                    transform: scaleX(1);
                }
                
                .task-item.selected {
                    background-color: #e3f2fd;
                    border-left: 3px solid #2196f3;
                    box-shadow: 0 3px 10px rgba(33, 150, 243, 0.15);
                }
                
                .task-item.selected::after {
                    transform: scaleX(1);
                }
                
                .task-checkbox {
                    margin-right: 12px;
                    flex-shrink: 0;
                }
                
                .checkbox-circle {
                    width: 22px;
                    height: 22px;
                    border-radius: 50%;
                    border: 2px solid #b0bec5;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    color: #fff;
                    transition: all 0.2s ease;
                }
                
                .task-item:hover .checkbox-circle {
                    border-color: #64b5f6;
                }
                
                .task-item.selected .checkbox-circle {
                    background-color: #2196f3;
                    border-color: #2196f3;
                }
                
                .task-details {
                    flex: 1;
                    min-width: 0; /* Prevents overflow */
                    padding-right: 10px;
                }
                
                .task-name {
                    font-weight: 500;
                    color: #37474f;
                    font-size: 0.95rem;
                    line-height: 1.3;
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    margin-bottom: 2px;
                }
                
                .task-meta {
                    display: flex;
                    gap: 8px;
                    flex-wrap: wrap;
                }
                
                .priority {
                    font-size: 0.75rem;
                    padding: 2px 8px;
                    border-radius: 10px;
                    display: inline-block;
                }
                
                .priority.urgent {
                    background-color: #ffebee;
                    color: #d32f2f;
                }
                
                .priority.high {
                    background-color: #fff8e1;
                    color: #ff8f00;
                }
                
                .task-actions {
                    display: flex;
                    opacity: 0.4;
                    transition: opacity 0.2s ease;
                }
                
                .task-item:hover .task-actions {
                    opacity: 1;
                }
                
                .action-btn {
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    background: transparent;
                    border: none;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    color: #78909c;
                    margin-left: 5px;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    position: relative;
                    overflow: hidden;
                }
                
                .action-btn::after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
                    opacity: 0;
                    transform: scale(0);
                    transition: all 0.3s ease;
                }
                
                .action-btn:active::after {
                    transform: scale(2);
                    opacity: 1;
                    transition: 0s;
                }
                
                .action-btn:hover {
                    background-color: rgba(0,0,0,0.05);
                    transform: scale(1.1);
                }
                
                .action-btn.edit-btn:hover {
                    color: #2196f3;
                }
                
                .action-btn.delete-btn:hover {
                    color: #f44336;
                }
                
                /* Make both columns the same height */
                @media (min-width: 992px) {
                    .col-lg-4 {
                        display: flex;
                        flex-direction: column;
                    }
                }

                /* Weather Widget Styles */
                .weather-card {
                    border-radius: 16px;
                    overflow: hidden;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
                    background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    position: relative;
                    height: 100%;
                }
                
                .weather-card:hover {
                    box-shadow: 0 8px 24px rgba(0,0,0,0.12);
                    transform: translateY(-2px);
                }
                
                .weather-container {
                    display: flex;
                    flex-direction: column;
                    height: 100px;
                }
                
                .weather-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 12px 16px;
                    background-color: #2196f3;
                    color: white;
                    height: 50px;
                    position: relative;
                    overflow: hidden;
                }
                
                .weather-header::after {
                    content: '';
                    position: absolute;
                    top: 0;
                    right: 0;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, 
                        rgba(255,255,255,0) 0%, 
                        rgba(255,255,255,0.1) 100%);
                    pointer-events: none;
                }
                
                .weather-header h6 {
                    font-weight: 500;
                    font-size: 0.95rem;
                    letter-spacing: 0.05em;
                }
                
                .refresh-btn {
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    background: rgba(255, 255, 255, 0.1);
                    color: white;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
                    cursor: pointer;
                }
                
                .refresh-btn:hover {
                    background: rgba(255, 255, 255, 0.2);
                    transform: rotate(180deg);
                }
                
                .weather-content {
                    position: relative;
                    height: 50px;
                    overflow: hidden;
                    background-color: white;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    padding: 0 10px;
                }
                
                /* Loading state */
                .weather-loading {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    color: #78909c;
                    padding: 10px;
                    text-align: center;
                    font-size: 0.85rem;
                }
                
                .spinner-border {
                    width: 1.5rem;
                    height: 1.5rem;
                    border-width: 0.2rem;
                }
                
                /* Error state */
                .weather-error {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    color: #ff8f00;
                    padding: 8px;
                    text-align: center;
                    font-size: 0.85rem;
                }
                
                .weather-error i {
                    font-size: 1.2rem;
                    margin-bottom: 6px;
                }
                
                /* Weather data display */
                .weather-data {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    width: 100%;
                }
                
                .city-info {
                    display: flex;
                    align-items: baseline;
                    margin-bottom: 5px;
                }
                
                .city-name {
                    font-size: 0.95rem;
                    font-weight: 500;
                    color: #37474f;
                    margin: 0;
                    margin-right: 5px;
                }
                
                .country {
                    font-size: 0.8rem;
                    color: #78909c;
                    margin: 0;
                }
                
                .temp-container {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    margin-bottom: 5px;
                }
                
                .weather-icon {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    height: 40px;
                    width: 40px;
                    margin-right: 10px;
                }
                
                .weather-icon img {
                    height: 100%;
                    width: 100%;
                    object-fit: contain;
                }
                
                .temp-data {
                    display: flex;
                    flex-direction: column;
                    align-items: flex-start;
                }
                
                .temperature {
                    font-size: 1.5rem;
                    font-weight: 600;
                    color: #263238;
                    margin: 0;
                    line-height: 1.2;
                }
                
                .weather-desc {
                    font-size: 0.8rem;
                    color: #546e7a;
                    margin: 0;
                    text-transform: capitalize;
                }
                
                .weather-details {
                    display: flex;
                    justify-content: space-around;
                    width: 100%;
                    margin-top: 5px;
                }
                
                .detail {
                    display: flex;
                    align-items: center;
                    font-size: 0.8rem;
                    color: #546e7a;
                }
                
                .detail i {
                    margin-right: 5px;
                    color: #2196f3;
                }
            </style>
        </div>
    </t>
</templates>